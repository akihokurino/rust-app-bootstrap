AWSTemplateFormatVersion: '2010-09-09'
Transform:
  - AWS::LanguageExtensions
  - AWS::Serverless-2016-10-31

Parameters:
  NetworkStackName:
    Type: String
    Default: 'network'
    Description: 'Name of the network stack'
  RDSStackName:
    Type: String
    Default: 'rds'
    Description: 'Name of the RDS stack'
  S3StackName:
    Type: String
    Default: 's3'
    Description: 'Name of the S3 stack'
  SNSStackName:
    Type: String
    Default: 'sns'
    Description: 'Name of the SNS stack'
  SSMParameterName:
    Type: String
    Default: '/rust-app-bootstrap/server/dotenv'
    Description: 'SSM Parameter Store name for dotenv file'

Globals:
  Function:
    Runtime: provided.al2
    MemorySize: 128
    Tracing: Active
    Timeout: 900
    VpcConfig:
      SecurityGroupIds:
        - Fn::ImportValue: !Sub '${NetworkStackName}-LambdaSecurityGroupId'
      SubnetIds:
        - Fn::ImportValue: !Sub '${NetworkStackName}-Subnet2Id'
    Environment:
      Variables:
        WITH_LAMBDA: "true"
        SSM_DOTENV_PARAMETER_NAME: !Ref SSMParameterName
        DATABASE_URL:
          Fn::ImportValue: !Sub '${RDSStackName}-ConnectionString'
        S3_BUCKET_NAME:
          Fn::ImportValue: !Sub '${S3StackName}-S3BucketName'
        SNS_ASYNC_TASK_TOPIC_ARN:
          Fn::ImportValue: !Sub '${SNSStackName}-AsyncTaskTopicArn'

Resources:
  ApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: bootstrap.is.real.handler
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /
            Method: ANY
        ProxyApiGreedy:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /{proxy+}
            Method: ANY
      Policies:
        - VPCAccessPolicy: { }
        - AmazonSSMReadOnlyAccess
        - AmazonDynamoDBFullAccess
        - AmazonS3FullAccess
        - AmazonSNSFullAccess
        - LambdaInvokePolicy:
            FunctionName: "*"
    Metadata:
      BuildMethod: makefile

  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: default
      BinaryMediaTypes:
        - "*/*"

  AsyncTaskFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: bootstrap.is.real.handler
      Events:
        Topic:
          Type: SNS
          Properties:
            Topic:
              Fn::ImportValue: !Sub '${SNSStackName}-AsyncTaskTopicArn'
      EventInvokeConfig:
        MaximumRetryAttempts: 0
      Policies:
        - VPCAccessPolicy: { }
        - AmazonSSMReadOnlyAccess
        - AmazonDynamoDBFullAccess
        - AmazonS3FullAccess
        - AmazonSNSFullAccess
        - LambdaInvokePolicy:
            FunctionName: "*"
    Metadata:
      BuildMethod: makefile

Outputs:
  ApiEndpoint:
    Description: 'API Gateway endpoint URL'
    Value: !Sub 'https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/default/'